name: Minecraft Docker Image CI

on:
  workflow_dispatch:
    inputs:
      PROJECT_ID:
        description: 'Modpack slug/ID'
        required: true
        type: string
      GAME_VERSION:
        description: 'Game version (e.g. 1.21)'
        required: true
        type: string
      LOADER:
        description: 'Loader (fabric|forge|neoforge|quilt)'
        required: true
        default: 'fabric'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository_owner }}/${{ github.event.inputs.PROJECT_ID }}

    steps:
      - uses: actions/checkout@v5
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
      
      # 解析整合包元数据
      - name: Resolve metadata
        id: meta
        run: |
          resp=$(curl -s "https://api.modrinth.com/v2/project/${{ inputs.PROJECT_ID }}/version" | \
            jq -r --arg L "${{ inputs.LOADER }}" --arg G "${{ inputs.GAME_VERSION }}" \
            'map(select(.loaders[]==$L and (.game_versions[]==$G) and .version_type=="release")) | sort_by(.date_published) | last')
          echo "java=$(echo "$resp" | jq -r 'if (.game_versions[0] | startswith("1.20.5") or startswith("1.20.6") or startswith("1.21")) then "21" else "17" end')" >> $GITHUB_OUTPUT
          echo "pack_ver=$(echo "$resp" | jq -r '.version_number')" >> $GITHUB_OUTPUT
          echo "version_id=$(echo "$resp" | jq -r '.id')" >> $GITHUB_OUTPUT

      # 下载整合包文件
      - name: Download modpack
        run: |
          curl -L "https://cdn.modrinth.com/data/${{ inputs.PROJECT_ID }}/versions/${{ steps.meta.outputs.version_id }}/download" \
            -o pack.mrpack

      # 获取 ServerPackCreator 工具
      - name: Download ServerPackCreator
        run: |
          url=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/Griefed/ServerPackCreator/releases/latest | \
          jq -r '.assets[] | select(.name | startswith("ServerPackCreator") and endswith(".jar")) | .browser_download_url')
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -o spc.jar "$url"

      # 生成服务端包
      - name: Generate server pack
        run: |
          java -Dorg.jline.terminal.dumb=true \
           -jar spc.jar --noGui --headless \
           --input pack.mrpack --output . \
           --minecraftVersion ${{ inputs.GAME_VERSION }} \
           --modLoader ${{ inputs.LOADER }}

      # 构建并推送多架构镜像
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            JAVA_VERSION=${{ steps.meta.outputs.java }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.LOADER }}-${{ steps.meta.outputs.pack_ver }}-${{ inputs.GAME_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
