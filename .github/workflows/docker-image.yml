name: Minecraft Docker Image CI

on:
  workflow_dispatch:
    inputs:
      PROJECT_ID: { description: 'CurseForge项目ID', required: true, type: string }
      SERVER_VERSION: { description: 'Minecraft服务端版本', required: true, type: string }
      MOD_LOADERS: { description: 'Minecraft模组加载器', required: true, default: 'fabric', type: string }
      JDK_VERSION: { description: 'Java版本', required: true, default: '21', type: string }

env:
  REGISTRY: ghcr.io
  JAR_CATALOG: public
  TEMP_CACHE_CATALOG: /temp/cache/
  CURSEFORGE_API: https://www.curseforge.com/api/v1
  FABRIC_META: https://meta.fabricmc.net/v2/versions
  CURSEFORGE_DOWNLOAD_API: https://mediafilez.forgecdn.net/files
  FORGE_DOWNLOAD: https://maven.minecraftforge.net/net/minecraftforge/forge
  FABRIC_API_BASE_URL: https://api.github.com/repos/FabricMC/fabric/releases?per_page=100
  PROMOTION_FILE: https://files.minecraftforge.net/net/minecraftforge/forge/promotions_slim.json

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/setup-qemu-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup & Download
        run: |
          set -e
          mkdir -p $JAR_CATALOG $TEMP_CACHE_CATALOG
          sudo apt-get -qq update
          # 验证并下载modpack
          curl -k -s "$CURSEFORGE_API/mods/${{ inputs.PROJECT_ID }}/files" | jq -e '.data[0].id' || exit 1
          FILES=$(curl -k -s "$CURSEFORGE_API/mods/${{ inputs.PROJECT_ID }}/files?pageSize=50")
          FILE=$(echo "$FILES" | jq -r --arg v "${{ inputs.SERVER_VERSION }}" --arg l "${{ inputs.MOD_LOADERS }}" '
            .data[] | select(.gameVersions | map(ascii_downcase) | any(. == ($v | ascii_downcase)) and any(. == ($l | ascii_downcase))) | {id, fileName} | first(. // empty)')
          [ -z "$FILE" ] && exit 1
          curl -k -sSLo modpack.zip "$CURSEFORGE_DOWNLOAD_API/$(printf "%04d%03d" $(echo $FILE | jq -r '.id' | cut -c1-4) $(echo $FILE | jq -r '.id' | cut -c5-7))/$(echo $FILE | jq -r '.fileName' | jq -sRr '@uri')"
          unzip -j modpack.zip manifest.json
          # 设置环境变量
          echo "NORMALIZED_NAME=$(jq -r '.name' manifest.json | tr '[:upper:]' '[:lower:]' | tr ' ' '-' | tr -cd '[:alnum:]-_')" >> $GITHUB_ENV
          echo "MODPACK_VERSION=$(jq -r '.version' manifest.json)" >> $GITHUB_ENV
          echo "MINECRAFT_VERSION=$(jq -r '.minecraft.version' manifest.json)" >> $GITHUB_ENV
          echo "MOD_LIST=$(jq -r '.files[] | "\(.projectID):\(.fileID)"' manifest.json | paste -sd ',')" >> $GITHUB_ENV
          echo "MOD_LOADER_VERSION=$(jq -r '.minecraft.modLoaders[0].id' manifest.json | cut -d- -f2)" >> $GITHUB_ENV

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ inputs.JDK_VERSION }}

      - name: Download Mod Loader & Fabric API
        run: |
          case "${{ inputs.MOD_LOADERS }}" in
            fabric)
              LOADER=$(curl -k -s $FABRIC_META/loader | jq -r '.[0].version')
              INSTALLER=$(curl -k -s $FABRIC_META/installer | jq -r '.[0].version')
              curl -k -sSL "$FABRIC_META/loader/$MINECRAFT_VERSION/$LOADER/$INSTALLER/server/jar" -o server-core.jar
              java -jar server-core.jar --nogui --universe $TEMP_CACHE_CATALOG
              API_URL=$(curl -k -s "$FABRIC_API_BASE_URL" | jq -r --arg v "$MINECRAFT_VERSION" '[.[]|select(.target_commitish==$v)][0].assets[0].browser_download_url')
              curl -k -sSL "$API_URL" -o $JAR_CATALOG/fabric-api.jar
              ;;
            forge)
              FORGE_VERSION=$(curl -k -s $PROMOTION_FILE | jq -r --arg v "$MINECRAFT_VERSION" '.promos[$v + "-latest"]')
              curl -k -sSL "$FORGE_DOWNLOAD/$MINECRAFT_VERSION-$FORGE_VERSION/forge-$MINECRAFT_VERSION-$FORGE_VERSION-installer.jar" -o forge-installer.jar
              java -jar forge-installer.jar --installServer
              mv forge-$MINECRAFT_VERSION-$FORGE_VERSION-universal.jar server-core.jar && rm -rf forge-installer.jar *.txt *.log run.*
              java -jar server-core.jar --nogui --universe $TEMP_CACHE_CATALOG
              ;;
          esac

      - name: Download Mods
        run: |
          echo "$MOD_LIST" | tr ',' '\n' | xargs -P$(nproc) -I {} sh -c '
            IFS=":" read pid fid <<< "{}"
            json=$(curl -k -s "$CURSEFORGE_API/mods/$pid/files/$fid")
            name=$(echo "$json" | jq -r '.data.fileName')
            url="$CURSEFORGE_DOWNLOAD_API/$(printf "%04d%03d" $(echo $json | jq -r '.data.id' | cut -c1-4) $(echo $json | jq -r '.data.id' | cut -c5-7))/$(echo "$name" | jq -sRr "@uri")"
            curl -k -sSL "$url" -o "$JAR_CATALOG/$name" || exit 1
          '

      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.NORMALIZED_NAME }}:${{ env.MODPACK_VERSION }}